#+PROPERTY: header-args:python jupyter-python :tangle yes :session notebook :async t :results output
#+title: Notebook Titanic
#+author: Sr. Menezes
#+jupyter-python: jupyter

* Titanica
** Imports
*** pandas:
- Responsible 4 read the data
*** numpy:
- Responsible 4 do math with nD-arrays
*** seaborn:
- Responsible 4 showing pretty graphs
*** matplotlib.pyplot:
- Responsible 4 showing graphs

*** sklearn.preprocessing OrdinalEncoder:
- Responsible 4 transform categorical features into numerical representations. (categorical features as an integer array)
*** sklearn.impute SimpleImputer:
- Class designed to handling missing values in datasets. (Primary function is to replace NaN or other specified missing value placeholders with imputed values based on chosen strategy)
*** sklearn.compose make_column_transformer:
- Is a convenience function that simplifies the creation of ColumnTransformer objects.
*** sklearn.pipeline:
**** Pipeline:
- Is a tool that allows me to chain together multiple data transformations and a final estimator(like a classifier or regressor) into a single, cohesive object, it streamline the machine learning workflow by ensuring that all steps, from pre-processing to model training, are applied consistently and efficiently.
**** make_pipeline:
- Function that simplifies the creation of Pipeline object
*** sklearn.linear_model LogisitcRegression
- Implements the Logistic Regression. A classification algorithhm used for predcting the probability of a categorical outcome.
*** sklearn.svm SVC
- SVC(Suport Vector Classifier) is a type of Support Vector Machine (SVM) used for classification tasks
*** sklearn.ensemble RandomForestCalssifier
- Sklearn implements of a Random Forest Classifier, whichh is a ensamble learn method. An ensemble learning is a ML technique that comines multiple individual models to create a more powerful and accurate predctive model
***  sklearn.neighbors KNeighborsClassifier
- KNNs for classification
*** sklearn.naive_bayes GaussianNB
- GaussianNB is like Naive Bayes but for numbers, not categorical
*** sklearn.model_selection
**** cross_val_score
- it is the cross validation score
**** stratifiedKFodl
- Provides train/test indices to split data in train and test sets
**** train_test_split
- is a method for splitting the data
**** GridSearchCV
- is a powerful tool in sckikit-learn used for hyper-parameter tuning ML models.
*** Codigo:
#+begin_src jupyter-python
  import pandas as pd
  import numpy as np
  import seaborn as sns
  from sklearn.preprocessing import OrdinalEncoder
  from sklearn.impute import SimpleImputer
  from sklearn.compose import make_column_selector
  from sklearn.pipeline import Pipeline, make_pipeline
  from sklearn.linear_model import LogisticRegression
  from sklearn.svm import SVC
  from sklearn.ensemble import RandomForestClassifier
  from sklearn.neighbors import KNeighborsClassifier
  from sklearn.naive_bayes import GaussianNB
  from sklearn.model_selection import cross_val_score, StratifiedKFold, GridSearchCV
  from pathlib import Path
  %matplotlib inline
#+end_src
#+RESULTS:
** Global constants
#+begin_src jupyter-python
  # BASE_PATH = Path(__file__).parent.parent
  # DATA_PATH = Path(__file__).parent.parent / "data"
  DATA_PATH2 = "/mnt/hdmenezess42/GitProjects/Titanic/data/"
#+end_src

#+RESULTS:

** Import the data
#+begin_src jupyter-python
  train_df = pd.read_csv(f"{DATA_PATH2}/train.csv")
  test_df = pd.read_csv(f"{DATA_PATH2}/test.csv")
#+end_src

#+RESULTS:
** Showing train heads
#+begin_src jupyter-python
  train_df.head()
#+end_src

#+RESULTS:
#+begin_export html
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
#+end_export

